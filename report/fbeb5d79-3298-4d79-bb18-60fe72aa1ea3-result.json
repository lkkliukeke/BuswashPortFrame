{"name": "司机管理", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_employeepage.TestEmployeePage object at 0x000001E2C75B5B40>\nexcelist = [13.0, '司机管理/司机查询', '单司机查询', 'post', '/buswash/employee/safe/find', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"10000294_123456\"\\n}', ...]\n\n    @pytest.mark.parametrize('excelist', localexcel)\n    @allure.feature('test_employeepage')\n    @allure.title('司机管理')\n    @allure.story('100%')\n    def test_employee(self, excelist):\n        #设置url\n        setrq.set_url(excelist[4])\n        # 请求头 header\n        setrq.set_headers(excelist[5])\n        #加入入参\n    \n    \n        # 请求对应封装\n        if excelist[3] == 'post':\n            setrq.set_data(excelist[6])\n            reqs = setrq.postreq()\n        elif excelist[3] == 'get':\n            setrq.set_params(excelist[6])\n            reqs = setrq.getreq()\n        else:\n            pass\n    \n    \n        #断言\n        # assert getreq.status_code == 200\n        Assert.Assertions.assert_code(self, reqs.status_code,200)\n    \n        #预取‘name’：‘123’包含再返回字符串中 #assert excellist[8] in getreq.text\n>       Assert.Assertions.assert_expect(self, excelist[9], reqs.text)\n\ntestcase\\test_employeepage.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.test_employeepage.TestEmployeePage object at 0x000001E2C75B5B40>\nexpect_msg = '\"job_id\":\"90179035\"'\nactual_msg = '{\"retcode\":\"40491\",\"retmsg\":\"司机信息不存在!\",\"data\":null,\"total\":null,\"success\":false}'\n\n    def assert_expect(self, expect_msg, actual_msg):\n        try:\n>           assert expect_msg in actual_msg\nE           AssertionError\n\ncommon\\Assert.py:25: AssertionError"}, "attachments": [{"name": "log", "source": "efa2fef5-33b5-41e4-9847-0502f455c169-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "excelist", "value": "[13.0, '司机管理/司机查询', '单司机查询', 'post', '/buswash/employee/safe/find', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"10000294_123456\"\\n}', '{\\n  \"ic_hard_card\": \"3846586563\"\\n}', 200.0, '{\\n  \"retcode\": \"0\",\\n  \"retmsg\": \"操作成功\",\\n  \"data\": {\\n    \"id\": 260125,\\n    \"job_id\": \"90179035\",\\n    \"old_job_id\": null,\\n    \"emp_id\": \"1624506313031\",\\n    \"emp_name\": \"刘珂珂1\",\\n    \"sex\": null,\\n    \"id_card\": null,\\n    \"telephone\": \"15290179035\",\\n    \"post_name\": \"574b5fe75ba0444b822f51b70b4b19db\",\\n    \"start_date\": null,\\n    \"org_num\": \"100016\",\\n    \"org_name\": \"测试部车队\",\\n    \"own_route_name\": null,\\n    \"ic_card\": \"98799999999\",\\n    \"today_route_name\": null,\\n    \"extend_resp\": null\\n  },\\n  \"total\": null,\\n  \"success\": true\\n}', '\"job_id\":\"90179035\"']"}], "start": 1698386582592, "stop": 1698386582656, "uuid": "fe2a2732-e354-4bbe-bbf7-6a9b58e0c1ab", "historyId": "cce2bc9896c6ce5e31ab161d0fdce086", "testCaseId": "2e4d21db13875d2ca017beb3ec16ff00", "fullName": "testcase.test_employeepage.TestEmployeePage#test_employee", "labels": [{"name": "feature", "value": "test_employeepage"}, {"name": "story", "value": "100%"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_employeepage"}, {"name": "subSuite", "value": "TestEmployeePage"}, {"name": "host", "value": "LAPTOP-GF0BVQLR"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_employeepage"}]}