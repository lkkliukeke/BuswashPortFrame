{"name": "卡模块", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_cardpage.TestCardPage object at 0x000001E2C4868550>\nexcelist = [1.0, '卡模块/卡添加编辑', '卡添加-修改', 'post', '/buswash/card/cu', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', ...]\n\n    @pytest.mark.parametrize('excelist', localexcel)\n    @allure.feature('test_cardpage')\n    @allure.title('卡模块')\n    @allure.story('100%')\n    def test_card(self, excelist):\n        #设置url\n        setrq.set_url(excelist[4])\n        # 请求头 header\n        setrq.set_headers(excelist[5])\n        #加入入参\n    \n    \n        # 请求对应封装\n        if excelist[3] == 'post':\n            setrq.set_data(excelist[6])\n            reqs = setrq.postreq()\n        elif excelist[3] == 'get':\n            setrq.set_params(excelist[6])\n            reqs = setrq.getreq()\n        else:\n            pass\n    \n    \n        #断言\n        # assert getreq.status_code == 200\n>       Assert.Assertions.assert_code(self, reqs.status_code,200)\n\ntestcase\\test_cardpage.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.test_cardpage.TestCardPage object at 0x000001E2C4868550>\ncode = 400, expected_code = 200\n\n    def assert_code(self, code, expected_code):\n        try:\n>           assert int(code) == int(expected_code)\nE           AssertionError\n\ncommon\\Assert.py:15: AssertionError"}, "attachments": [{"name": "log", "source": "4810ff0a-8a98-4f43-955d-ea204985e49a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "excelist", "value": "[1.0, '卡模块/卡添加编辑', '卡添加-修改', 'post', '/buswash/card/cu', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', '{\\n  \"content\": \"测试\",\\n  \"noticeId\": \"3\",\\n  \"title\": \"刘珂珂测试\"\\n}', 200.0, '{\\n  \"retcode\": \"0\",\\n  \"retmsg\": \"操作成功\",\\n  \"data\": [],\\n  \"total\": null,\\n  \"success\": true\\n}', '\"retmsg\":\"操作成功\"']"}], "start": 1698386573574, "stop": 1698386573703, "uuid": "58b7dbd3-88d7-4ba4-8231-605b8c59abe2", "historyId": "641dcf0e63204134f5f6f9fc7499c07a", "testCaseId": "26f4e09a1a19a1a1fc9fa0593246a73c", "fullName": "testcase.test_cardpage.TestCardPage#test_card", "labels": [{"name": "feature", "value": "test_cardpage"}, {"name": "story", "value": "100%"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_cardpage"}, {"name": "subSuite", "value": "TestCardPage"}, {"name": "host", "value": "LAPTOP-GF0BVQLR"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_cardpage"}]}