{"name": "公告模块", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_noticepage.TestNoticePage object at 0x000001E2C76CAF80>\nexcelist = [1.0, '公告模块/创建与编辑', '公告创建和编辑', 'post', '/buswash/system/notice/cu', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', ...]\n\n    @pytest.mark.parametrize('excelist', localexcel)\n    @allure.feature('test_noticepage')\n    @allure.title('公告模块')\n    @allure.story('100%')\n    def test_notice(self, excelist):\n        #设置url\n        setrq.set_url(excelist[4])\n        # 请求头 header\n        setrq.set_headers(excelist[5])\n        #加入入参\n    \n    \n        # 请求对应封装\n        if excelist[3] == 'post':\n            setrq.set_data(excelist[6])\n            reqs = setrq.postreq()\n        elif excelist[3] == 'get':\n            setrq.set_params(excelist[6])\n            reqs = setrq.getreq()\n        else:\n            pass\n    \n    \n        #断言\n        # assert getreq.status_code == 200\n        Assert.Assertions.assert_code(self, reqs.status_code,200)\n    \n        #预取‘name’：‘123’包含再返回字符串中 #assert excellist[8] in getreq.text\n>       Assert.Assertions.assert_expect(self, excelist[9], reqs.text)\n\ntestcase\\test_noticepage.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.test_noticepage.TestNoticePage object at 0x000001E2C76CAF80>\nexpect_msg = '\"retmsg\":\"操作成功\"'\nactual_msg = '{\"retcode\":\"40001\",\"retmsg\":\"当前公告无法编辑\",\"data\":null,\"total\":null,\"success\":false}'\n\n    def assert_expect(self, expect_msg, actual_msg):\n        try:\n>           assert expect_msg in actual_msg\nE           AssertionError\n\ncommon\\Assert.py:25: AssertionError"}, "attachments": [{"name": "log", "source": "11a5c54d-9502-412a-a05f-57af32278175-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "excelist", "value": "[1.0, '公告模块/创建与编辑', '公告创建和编辑', 'post', '/buswash/system/notice/cu', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', '{\\n  \"content\": \"测试\",\\n  \"noticeId\": \"3\",\\n  \"title\": \"刘珂珂测试\"\\n}', 200.0, '{\\n  \"retcode\": \"0\",\\n  \"retmsg\": \"操作成功\",\\n  \"data\": [],\\n  \"total\": null,\\n  \"success\": true\\n}', '\"retmsg\":\"操作成功\"']"}], "start": 1698386594245, "stop": 1698386594392, "uuid": "a590efbe-ff04-42e2-8519-6168cf3f8dab", "historyId": "5f43d19dc1adccbdbbef076f99668b80", "testCaseId": "7374dd3531e270441214bee31d501dc3", "fullName": "testcase.test_noticepage.TestNoticePage#test_notice", "labels": [{"name": "feature", "value": "test_noticepage"}, {"name": "story", "value": "100%"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_noticepage"}, {"name": "subSuite", "value": "TestNoticePage"}, {"name": "host", "value": "LAPTOP-GF0BVQLR"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_noticepage"}]}