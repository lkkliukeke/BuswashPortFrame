{"name": "设备管理模块", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_devicepage.TestDevicePage object at 0x000001E2C4868340>\nexcelist = [24.0, '设备管理模块/设备', '解绑设备', 'post', '/buswash/device/unbind', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', ...]\n\n    @pytest.mark.parametrize('excelist', localexcel)\n    @allure.feature('test_devicepage')\n    @allure.title('设备管理模块')\n    @allure.story('100%')\n    def test_device(self, excelist):\n        #设置url\n        setrq.set_url(excelist[4])\n        # 请求头 header\n        setrq.set_headers(excelist[5])\n        #加入入参\n    \n    \n        # 请求对应封装\n        if excelist[3] == 'post':\n            setrq.set_data(excelist[6])\n            reqs = setrq.postreq()\n        elif excelist[3] == 'get':\n            setrq.set_params(excelist[6])\n            reqs = setrq.getreq()\n        else:\n            pass\n    \n    \n        #断言\n        # assert getreq.status_code == 200\n        Assert.Assertions.assert_code(self, reqs.status_code,200)\n    \n        #预取‘name’：‘123’包含再返回字符串中 #assert excellist[8] in getreq.text\n>       Assert.Assertions.assert_expect(self, excelist[9], reqs.text)\n\ntestcase\\test_devicepage.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.test_devicepage.TestDevicePage object at 0x000001E2C4868340>\nexpect_msg = '\"retmsg\":\"解绑失败\"'\nactual_msg = '{\"retcode\":\"0\",\"retmsg\":\"操作成功\",\"data\":[],\"total\":null,\"success\":true}'\n\n    def assert_expect(self, expect_msg, actual_msg):\n        try:\n>           assert expect_msg in actual_msg\nE           AssertionError\n\ncommon\\Assert.py:25: AssertionError"}, "attachments": [{"name": "log", "source": "2fcf2b8d-196d-4854-8597-445ae2e96b96-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "excelist", "value": "[24.0, '设备管理模块/设备', '解绑设备', 'post', '/buswash/device/unbind', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', '{\\n  \"stationNum\": \"1\"\\n}', 200.0, '{\\n  \"retcode\": \"10075\",\\n  \"retmsg\": \"解绑失败\",\\n  \"data\": null,\\n  \"total\": null,\\n  \"success\": false\\n}', '\"retmsg\":\"解绑失败\"', '']"}], "start": 1698386577980, "stop": 1698386578129, "uuid": "0f18595e-e791-478a-9e01-44196a3997fc", "historyId": "9254eaf9e4b21739d5d0b125ebef7e36", "testCaseId": "9f87fd6fa81cbf38ce3137a97c1559bc", "fullName": "testcase.test_devicepage.TestDevicePage#test_device", "labels": [{"name": "feature", "value": "test_devicepage"}, {"name": "story", "value": "100%"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_devicepage"}, {"name": "subSuite", "value": "TestDevicePage"}, {"name": "host", "value": "LAPTOP-GF0BVQLR"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_devicepage"}]}