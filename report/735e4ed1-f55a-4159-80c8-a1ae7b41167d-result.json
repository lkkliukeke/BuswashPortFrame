{"name": "设备管理模块", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_devicepage.TestDevicePage object at 0x000001E2C48684F0>\nexcelist = [31.0, '设备管理模块拓展/签到机配置', '查询签到机配置所有模板', 'post', '/buswash/device/extra/central/template/search', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', ...]\n\n    @pytest.mark.parametrize('excelist', localexcel)\n    @allure.feature('test_devicepage')\n    @allure.title('设备管理模块')\n    @allure.story('100%')\n    def test_device(self, excelist):\n        #设置url\n        setrq.set_url(excelist[4])\n        # 请求头 header\n        setrq.set_headers(excelist[5])\n        #加入入参\n    \n    \n        # 请求对应封装\n        if excelist[3] == 'post':\n            setrq.set_data(excelist[6])\n            reqs = setrq.postreq()\n        elif excelist[3] == 'get':\n            setrq.set_params(excelist[6])\n            reqs = setrq.getreq()\n        else:\n            pass\n    \n    \n        #断言\n        # assert getreq.status_code == 200\n>       Assert.Assertions.assert_code(self, reqs.status_code,200)\n\ntestcase\\test_devicepage.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.test_devicepage.TestDevicePage object at 0x000001E2C48684F0>\ncode = 500, expected_code = 200\n\n    def assert_code(self, code, expected_code):\n        try:\n>           assert int(code) == int(expected_code)\nE           AssertionError\n\ncommon\\Assert.py:15: AssertionError"}, "attachments": [{"name": "log", "source": "78997099-d634-47bf-8478-c3b6f54269c2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "excelist", "value": "[31.0, '设备管理模块拓展/签到机配置', '查询签到机配置所有模板', 'post', '/buswash/device/extra/central/template/search', '{\\n   \"Content-Type\":\"application/json\",\\n   \"token\":\"c5def5e2fab84b80ad412fd2ca6c2e41\"\\n}', '', 200.0, '内容较多 暂不写入表格', '\"retmsg\":\"操作成功\"', '']"}], "start": 1698386579025, "stop": 1698386579140, "uuid": "a02bad7e-82c8-4a30-aa30-9140b58bf3e0", "historyId": "09215f13a283bdad0c8a777e40449f66", "testCaseId": "9f87fd6fa81cbf38ce3137a97c1559bc", "fullName": "testcase.test_devicepage.TestDevicePage#test_device", "labels": [{"name": "feature", "value": "test_devicepage"}, {"name": "story", "value": "100%"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_devicepage"}, {"name": "subSuite", "value": "TestDevicePage"}, {"name": "host", "value": "LAPTOP-GF0BVQLR"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_devicepage"}]}